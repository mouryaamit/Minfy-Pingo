package com.example.customer_sample;

import org.json.JSONObject;

import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.github.nkzawa.emitter.Emitter;
import com.github.nkzawa.socketio.client.IO;
import com.github.nkzawa.socketio.client.Socket;

@SuppressWarnings("deprecation")
public class MainActivity extends Activity {
	private Socket mSocket;
	{
		try {
			mSocket = IO.socket("http://192.168.0.100:3003");
		} catch (Exception e) {
			System.out.println("Exception " + e.getMessage());
			throw new RuntimeException(e);
		}
	}

	private Integer cid = 78;
	private Integer pid = 45;
	
	private TextView totalPingo;
	private TextView pingoId;
	private TextView pLat;
	private TextView pLong;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		/*if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}*/

		mSocket.on(Socket.EVENT_CONNECT, onConnect);
		mSocket.on(Socket.EVENT_RECONNECT, onConnect);
		mSocket.on(Socket.EVENT_CONNECT_ERROR, onConnectError);
		mSocket.on(Socket.EVENT_CONNECT_TIMEOUT, onConnectError);
		mSocket.on("Reconnect", onReconnect);
		mSocket.on("totalPingoOnline", onTotalPingoOnline);
		mSocket.on("PickupLatLongDetails", onPickupLatLongDetails);
		mSocket.on("bookingFail", onBookingFail);
		mSocket.on("bookingSuccess", onBookingSuccess);
		mSocket.on("cancelFail", onCancelFail);
		mSocket.on("cancelSuccess", onCancelSuccess);
		mSocket.on("pickupConfirm", onPickupConfirm);

		mSocket.connect();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();

		mSocket.disconnect();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_main, container,
					false);
			return rootView;
		}
	}

	private Emitter.Listener onConnect = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			String myString = null;
			try {
				myString = new JSONObject().put("user", cid).toString();
			} catch (Exception e) {
				System.out.println("Ërror : " + e.getMessage());
				e.printStackTrace();
			}
			mSocket.emit("addMeCustomer", myString);
		}
	};

	private Emitter.Listener onConnectError = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {

		}
	};

	private Emitter.Listener onReconnect = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			String myString = null;
			try {
				myString = new JSONObject().put("user", cid).toString();
			} catch (Exception e) {
				System.out.println("Ërror : " + e.getMessage());
				e.printStackTrace();
			}
			mSocket.emit("addMeCustomer", myString);
		}
	};

	private Emitter.Listener onTotalPingoOnline = new Emitter.Listener() {
		MainActivity.this.getAcitivity().runOnUiThread(new Runnable() { 
		@Override
		public void call(final Object... args) {
			System.out.println("args "+args[0]);
//			JSONObject data = (JSONObject) args[0];
			totalPingo = (TextView) findViewById(R.id.total_pingo);
			System.out.println("Pingo Online : "+args[0]);
			totalPingo.setText("Pingo");
		}
		});
	};

	private Emitter.Listener onPickupLatLongDetails = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {

		}
	};

	private Emitter.Listener onBookingFail = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			NotificationManager notif=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
            Notification notify=new Notification(android.R.drawable.stat_notify_more,"Booking Fail",System.currentTimeMillis());
            PendingIntent pending= PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);
            
            notify.setLatestEventInfo(getApplicationContext(),"Booking Fail","Booking Fail",pending);
            notif.notify(0, notify);
		}
	};

	private Emitter.Listener onBookingSuccess = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			NotificationManager notif=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
            Notification notify=new Notification(android.R.drawable.stat_notify_more,"Booking Success",System.currentTimeMillis());
            PendingIntent pending= PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);
            
            notify.setLatestEventInfo(getApplicationContext(),"Booking Success","Booking Success",pending);
            notif.notify(0, notify);
		}
	};

	private Emitter.Listener onCancelFail = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			NotificationManager notif=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
            Notification notify=new Notification(android.R.drawable.stat_notify_more,"Cancel Fail",System.currentTimeMillis());
            PendingIntent pending= PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);
            
            notify.setLatestEventInfo(getApplicationContext(),"Cancel Fail","Cancel Fail",pending);
            notif.notify(0, notify);
		}
	};

	private Emitter.Listener onCancelSuccess = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
			NotificationManager notif=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
            Notification notify=new Notification(android.R.drawable.stat_notify_more,"Cancel Success",System.currentTimeMillis());
            PendingIntent pending= PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);
            
            notify.setLatestEventInfo(getApplicationContext(),"Cancel Success","Cancel Success",pending);
            notif.notify(0, notify);
		}
	};

	private Emitter.Listener onPickupConfirm = new Emitter.Listener() {
		@Override
		public void call(final Object... args) {
            
            NotificationManager notif=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
            Notification notify=new Notification(android.R.drawable.stat_notify_more,"Pickup Confirm",System.currentTimeMillis());
            PendingIntent pending= PendingIntent.getActivity(getApplicationContext(), 0, new Intent(), 0);
            
            notify.setLatestEventInfo(getApplicationContext(),"Pickup Confirm","Pickup Confirm",pending);
            notif.notify(0, notify);
		}
	};
}
